import slack
import os
import requests
import urllib.parse
from pathlib import Path
from dotenv import load_dotenv
from slackeventsapi import SlackEventAdapter
from flask import Flask,request,Response


# Load the Token from .env file
env_path = Path('.') / '.env'
load_dotenv(dotenv_path=env_path)
OWM_API = os.getenv('OWM_API')

# Configure your flask application
app = Flask(__name__)

# Using WebClient in slack, there are other clients built-in as well !!
client = slack.WebClient(token=os.environ['SLACK_TOKEN'])

# Configure SlackEventAdapter to handle events
slack_event_adapter = SlackEventAdapter(os.environ['SIGNING_SECRET'],'/slack/events',app)

# Get Bot ID
BOT_ID = client.api_call("auth.test")['user_id']

OWM_API = os.getenv("OWM_API")

@slack_event_adapter.on('message')
def message(payload):
    event = payload.get('event',{})
    channel_id = event.get('channel')
    user_id = event.get('user')
    text = event.get('text')
    OWN_URL = f"https://api.openweathermap.org/data/2.5/weather?q={text}&units=metric&appid={OWM_API}"
    response = requests.get(OWN_URL)
    if BOT_ID != user_id:
        if response.status_code == 200:
            curr_weather = response.json()['weather']
            curr_temp = response.json()['main']
            weather_response = f"The current temperature in {text} is {curr_temp['temp']} C, {curr_weather[0]['main']}, {curr_weather[0]['description']}."
            client.chat_postMessage(channel=channel_id, text=weather_response)
        if response.status_code == 404:
            client.chat_postMessage(channel=channel_id, text=text)

if __name__ == "__main__":
    app.run(debug=True)
